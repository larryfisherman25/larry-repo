= AWS Cloud Practitioner =
    -> Cloud concepts
        - on-demand
        - rapid-access
        - flexible
        - pay-as-you-go
        - don't need upfront investment

        = Advantages
            * don't need upfront investments
            * scalability with low cost
            * stop guessing capacity
            * speed agility
            * no maintaining data centers
            * go global in minutes

        = Types of Cloud Computing
            * IaaS
                - networking, computing, storage and database
            * PaaS
                - remove the need maintaining infrastructure, focus on deployment
            * SaaS
                - completed product, end-user application

        = Models of Cloud Computing
            * Public
                - everything on Cloud, fully deployed
            * Hybrid
            * On-premises (Private)

    -> Security and Compliance
        = Cloud Security
            - HIGHEST PRIORITY
                - software-based tools

        = Shared Responsibility Model
            - commonly referred as:
            SECURITY "OF" THE CLOUD X SECURITY "IN" THE CLOUD
            (AWS)                 (COSTUMER)

            """
            The costumer assumes responsibility and management of the guest operating system
            (including security patches and updates), other associated application software
            as well as the configuration of the AWS provided security group firewall.
            """

        = AWS Cloud Compliance
            - Programs
            - Artifact

        = Services
            - Artifact
            - Audit Manager
            - Certificate Manager
            - CloudHSM (Hardware Security Modules)
            - Cognito
            - Detective
            - Directory Service
            - Firewall Manager
            - GuardDuty
            - IAM
            - IAM Identity Center (successor AWS Single Sign-On)
            - Inspector
                - automated search for vulnerabilities, restrict on EC2 instances
                ** Trusted Advisor (On Management & Governance)
                - recommend best practices
            - Key Management Service
            - Amazon Macie
            - AWS Network Firewall
            - Resource Access Manager
            - Secrets Manager
            - Security Hub
            - AWS Signer
            - WAF & Shield
                - protect API, web apps, web exploit and acts on the 7th layer
                - pricing: rules + requests.
                - Shield: Standard (free/default) and Advanced(paid:DDoS)
                CloudTrail (management & governance)
            	- audit and monitoring (log monitoring)

        = Overview
        	- WAF -> stop hackers (7th layer)
        	- Shield -> Stop DDoS attacks (standard/advanced)
        	- Inspector -> EC2 vulnerabilities
        	- Cloudwatch -> monitoring applications and infrastructure
        	- Cloudtrail -> "logs" apis requests
        	- Config -> Config management
        	- Athena -> Queries (data stored in S3)
        	- Macie -> uses ML to identify (PII)

    = Global Infrastructure
    	- AWS is built around Regions and Availability Zones.
    	- Region (physical location) -> multiple Availability Zones
    	- Availability Zones -> one or more discrete data centers
    	- AWS operates in over 69 Availability Zones within over 22 regions around the world (2021)
    	- now it's 87 'A.zones' and 27 regions (2022)
    	- at least (minimum of 2 zones per region)
    	- He also have Edge locations -> used for caching content (CDN-content delivery network)
        * Edge Location > Availability Zones > Regions

    	- Choosing the AWS Region
    		* data storage laws
    		* latency to end users
    		* aws services

    	- Access to Services
    		* AWS Management Console
    		* Command Line Interface (CLI)
    		* Software Development kits (SDKs)

    	- Methods of Deploying and Operating in the AWS Cloud
    		* Elastic Beanstalk -> web applications (Compute)
    			- just upload the code, and it automatically deploy with the correct provisioning
                - the Beanstalk itself it's not paid, but the infra for deploying it's paid!
            * Cloud Formation (Management & Governance)
                - very similar to the Beanstalk, but not only for web applications
                - you can create an infrastructure from a template
            * OpsWorks (Management & Governance)
                - managed instances of Chef and puppet
                - configured, managed and deployed
            * CodeCommit (Developer Tools)
                - source control service (git)
                - Git-based repositories
            * CodeDeploy (Developer Tools)
                - automate deploy
                - EC2, Fargate, Lambda and on-premises
            * CodePipeline (Developer Tools)
                - continuous delivery
                - full Development pipeline, automating build, test and deploy
                - no upfront fee or long-term commitments, pays as you use
            * ECS - Elastic Container Service (Compute)
                - Must have an EC2 instance to maintain the infrastructure
                - docker/container management and deploy
                - automatic infrastructure for your deployment
            * Fargate (manager)
                - Simpler
                - Serverless
                - automatic infrastructure
            * ECR -
                - Where you store your Docker images

    = Global Services =
        - Worldwide available
            * IAM -> Identity and Access Management
            * Route53 -> DNS
                - manage DNS
                    4 types of routing policies
                        1- Simple routing : No helth check 1 instance
                        2- Weighted routing: multiple instances with health Check
                        3- Latency routing: get the nearest location to reduce latency
                        4- Failover routing: disaster recovery

            * CloudFront -> CDN
                - Content delivery network
                    - Improves read performance, content is cached
                    at the edge
                    - DDoS protection (because Worldwide), integration with Shield,
                    AWS Web application firewall
                - Origins:
                    - s3 bucket
                        - enhanced security: Origin Access control(OAC)
                    - Custom origin (HTTP)
                - Great for static content that must be available everywhere

            * Global Accelerator ->
                Availability and performance
                60% improvement on your route to your application
                2 Anycast IP send through Edge Locations


            * SNS -> notification
            * SES -> Email service

            ***S3 -> Regional service with global vision

    = Services "On-premises"
        - Local
            * Snowball -> Data Transfer (Service/Hardware)
            * Storage Gateway -> Hybrid cloud storage with local caching
            * CodeDeploy -> Automate code deployment to maintaining application
            * OpsWorks -> chef and puppet
            * IoT Greengrass -> extends cloud capabilities to local devices

    = IAM service
        - Creating a MFA on your account
        - Creating the IAM users
        - And then, setting the group permissions for them

        - IAM Roles
            -

    = S3 features (Storage)
        * object based
        * Replication
        * Buckets policy
        * Encryption
        * file size 0 - 5 TB
        * key (name of the object)
        * Unlimited Storage
        * Storage in buckets
        - Cross Region Replication:
            - Great for dynamic content that needs to be available at low-Latency
            at few regions

        - Storage Classes
            * Standard                 ^                |
            * Intelligent-Tiering      |                |
            * Standard-IA              |                |
            * One Zone-IA              |   ++ Price     |    -- Importance/Availability
            * Glacler                  |                |
            * Glacler Deep Archive     |                V

    = EC2 - Elastic Computing Cloud
        - Fast, scalable and easy to start using
        - types of instances:
            * On-demand
                - pay-as-you-go model, where you don't need to provision your machine
                just start to using, and you pay as much as capabilities you demand
            * Reserved instances
                - you can save up to 75% provisioning a machine for your needs
                comparing to on-demand instances
            * Spot instances (usually additional)
                - 90% discount over an on-demand instance, e.g. gonna use an instance for a week
                it's better spot instance than others, save money.
            * Dedicated Host
                - physical server
                - fully-dedicated to your use

    = Snow Family
        - Data migration:
            - Snowcone, Snowball Edge, Snowmobile
                8 TB         80 TB      > 100 PB
        - Edge Computing:
            - Snowcone, Snowball Edge
        - AWS OpsHub
            - software: graphical interface to manage the snow devices
        All: can run lambda or IoT sevice like Greengrass


    = AWS Storage Gateway
        - maintaining a bridge between your on-promises infrastructure and the CLOUD
            for an S3 or EBS or Glacier

    = RDS - Relational database
        - Aurora:
            5x MySQL and 3x faster than Postgres
            cost more than 20% over the other, but more effective
        - ElastiCache
            - intense workloads
        - DynamoDB
            - across 3 AZ
            - NoSQL
            - severless
            - low latency
                - DAX
                    - DynamoDB Accelerator
                    - 10x faster
                    - only for DynamoDB
        - Global tables
            - globally, low latency

    = Redshift
        - Data analytics
        - Petabytes of data
        - minutes to query not seconds
        - MPP - Massively Parallel Query Execution, highly available
        - 10x faster than other Data Warehouse
        - AWS Quicksight or Tableau

    = EMR - Elastic Map Reduce
        - Hadoop clusters (Big Data)
        - Auto-Scaling and integrated with Spot instances
        - Data processing, machine learning, web indexing big data...

    = Athena
        - Serverless SQL to analyze data from s3.**

    = AWS Quicksight
        - BI in aws

    = DocumentDB
        - mongoDB
        - NoSQL
        - JSON data
        - 3 AZ

    = Neptune
        - graph database
        - 3 AZ up to 15 replicas

    = QLDB - Quantum Ledger database
        - recording financial transactions
        - Serverless
        - 3 AZ
        - Immutable system
        - 2-3x better than other ledger blockchain frameworks
        - manipulate data using SQL

    = Managed blockchain
        - decentralyze
        - Hyperledger FABRIC and Ethereum

    = AWS Glue
        - ETL service
        - serverless
        - Glue Transform

    = DMS - Database Migration Service
        - homogenius migrations And
        - heterogenius migrations


    = ELB - Elastic Load Balance
        - load managing
        - EC2 instances, containers and IP addresses
        - works on single or multiple Zones

    = Lambda
        - functions
        - short executions
        - Run on-demand
        - Scaling is automated
        - pay-per-request
            - pay for calls and duration
        - Event-Driven, it's a react service*

    = Batch
        - no limit of time
        - relies on EC2 instances or docker containers
        - that's the difference over the lambda

    = Lightsail
        - for cloud noobs
        - no auto-Scaling
        - simple web applications

    = CDK - Cloud Development kit
        - Define your language: python, js, .NET
        - Great for lambda em Docker

    = Elastic Beanstalk = PaaS - application focused
        - Developer centric view
        - just the application code its the responsibility of the developer
        - has a health monitoring
            - pushes metrics to Cloudwatch
            - Checks for apps health

    = CodeDeploy
        - hybrid service
        - can be used to on-premises migration

    = CodeCommit
        - repositorie like GitHub

    = CodeBuild
        - Compiles, runs code, run tests and produces packages that can be
        easily deployed
        - serverless
        - pay for the build time - pay-as-you-go

    = CodePipeline
        - Orchestrate the steps CICD
        - fast delivery & fast updates

    = CodeArtifact
        - dependencies of development
        - store code dependencies

    = CodeStar
        - Unified UI
        - in one place
        - can edit code 'in the cloud' using AWS Cloud9

    = Cloud9
        - Cloud IDE
        - on-browser
        - pair-programing

    = SSM - System Manager
        - Hybrid service
        - Manage Ec2 both cloud and on-premises
        - Patching automation
        - Run commands across an entire fleet of servers

    = SSM session manager
        - No SSH
            - no port 22
            - better SECURITY

    = OpsWorks
        - chef and puppet
        - alternative for SSM

    = AWS Outposts
        - server racks (on-premises)

    = AWS Wavelengths
        - 5g networks
        - Smart cities

    = AWS Local zones
        - run latency-sensitive applications

    = Auto Scaling
        - scalability

    == Cloud Integrations ==

        = Amazon SQS - Simple Queue Service
            - decouple applications
            - msgs are deleted after trey're read

        = Kinesis
            - Big data streaming
            * Data Streams: low latency hundreds of thousands of sources
            * Data Firehose: load into s3, Redshift, ElasticSearch, etc.
            * Data Analytics: real-time analytics using SQL
            * Video Streams: monitor video for analytics or ML

        = SNS - Simple Notification Service
            - one msg to many receivers

        = Amazon MQ
            - its for costumers that are in migration to the cloud
            - rabbit mq its used on-premise

    == Cloud Monitoring ==
        = Cloudwatch metrics
            - metrics for every service on aws
            - can create CloudWatch dashboards of metrics
        = CloudWatch alarms
            - triggered by a metric
            - takes an action
        = Event bridge
            - Cron jobs
            - Schedule
            - Even pattern
            - Trigger lambda functions
            - replay archived events

        = Cloudtrail
            - governance, Compliance and audit
            - enable by default

        = X-ray
            - Debugging
            - Visual analysis on your application

        = CodeGuru
            - ML-powered
                - automated code reviews
                - application performance recommendations

        = Service Health Dashboard
            - all regions, all Services
            - historical
        = Personal Health Dashboard
            - alerts and remediation guidance
            - when events may impact you
            
